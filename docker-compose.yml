services:
  app:
    container_name: telemetry_service
    build:
      context: .
      dockerfile: src/Dockerfile
    working_dir: /app
    volumes:
      - ./src:/app/src
      - ./data:/app/data
      - ./config.yaml:/app/config.yaml:ro
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=.
    tty: true
    stdin_open: true
  tests:
    container_name: telemetry_tests
    build:
      context: .
      dockerfile: src/Dockerfile
    env_file:
      - .env
    working_dir: /app
    command: ["python", "-m", "unittest", "discover", "-s", "tests"]
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ./data:/app/data
      - ./config.yaml:/app/config.yaml:ro
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app

  train-model:
    container_name: train_model
    build:
      context: .
      dockerfile: training/Dockerfile
    profiles: ["manual"]
    working_dir: /app
    volumes:
      - ./training:/app/training
      - ./data:/app/data
      - ./src:/app/src
      - ./logs:/app/logs
      - ./config.yaml:/app/config.yaml:ro
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=.
    command: python training/main.py

  tensorboard:
    build:
      context: ./tensorboard
      dockerfile: Dockerfile
    ports:
      - "6006:6006"
    volumes:
      - ./logs:/logs

  api:
    container_name: api
    build:
      context: .
      dockerfile: api/Dockerfile
    working_dir: /app
    volumes:
      - ./api:/app/api
      - ./src:/app/src
      - ./data:/app/data
      - ./config.yaml:/app/config.yaml:ro
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app:/app/src:/app/api
    ports:
      - "8000:8000"
    depends_on:
      - app

volumes:
  data:
  src:
  logs: